<?php

namespace App\Models;

use App\Traits\HasUuid;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\Relations\MorphTo;

class BaseProject extends Model
{
    use HasFactory;
    use HasUuid;

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::created(function ($baseProject) {
            $baseProject->projects()->create([
                'title'         => $baseProject->title,
                'is_current'    => true,
            ]);

            $baseProject->owner()->associate($baseProject->owner);
        });
    }

    protected $fillable = [
        'uuid',
        'title',
        'owner_type',
        'owner_id',
        'summary',
        'has_infra',
        'pap_type_id',
    ];

    public function getRouteKeyName(): string
    {
        return 'uuid'; // TODO: Change the autogenerated stub
    }

    public function pap_type(): BelongsTo
    {
        return $this->belongsTo(PapType::class);
    }

    public function owner(): MorphTo
    {
        return $this->morphTo();
    }

    public function projects(): HasMany
    {
        return $this->hasMany(Project::class);
    }

    public function isArchived(): bool
    {
        return !is_null($this->archived_at);
    }

    public function collaborators(): HasMany
    {
        return $this->hasMany(Collaborator::class);
    }

    public function current()
    {
        //
    }
}
